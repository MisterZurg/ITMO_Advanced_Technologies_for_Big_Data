version: "3.9"

services:
#  big-app:
#    container_name: big-app
#    environment:
#      POSTGRES_HOST: "big-db"
#    build:
#      context: ../
#      dockerfile: ./build/app/Dockerfile
#      args:
#        LOCAL: "true"
#    ports:
#      - "8080:8080"
#      - "8090:8090"
#    depends_on:
#      - big-db
#    links:
#      - big-db
#    networks:
#      - big-dev
#    restart: always
#
#  shit-house:
#    image: clickhouse/clickhouse-server:latest
#    environment:
#      CLICKHOUSE_USER: shittyshiter
#      CLICKHOUSE_PASSWORD: suckass
#    ports:
#       - "18123:8123"
#       - "19000:9000"
#    volumes:
#      - "../internal/db/clickhouse/clickhouse_init.sql:/docker-entrypoint-initdb.d/clickhouse_init.sql"

#  kafka:
#    image: confluentinc/cp-kafka:6.1.1
#    depends_on:
#      - zookeeper
#    ports:
#      - '9092:9092'
#    expose:
#      - '29092'
#    environment:
#      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
#      KAFKA_MIN_INSYNC_REPLICAS: '1'

    kafka-server:
      image: bitnami/kafka:latest
      container_name: kafka-server
      hostname: kafka-server
      ports:
        - "9092:9092"
      volumes:
        - "kafka_data:/bitnami"
      environment:
        - KAFKA_CFG_NODE_ID=0
        - KAFKA_CFG_PROCESS_ROLES=controller,broker
        - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
        - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
        - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-server:9093
        - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      networks:
        - app-tier

#    init-kafka:
#      image: bitnami/kafka:latest
#      container_name: init-kafka
#      hostname: init-kafka
#      depends_on:
#        - kafka-server
#      entrypoint: [ '/bin/sh', '-c' ]
#      command: |
#        "
#        # blocks until kafka is reachable
#        kafka-topics.sh --list --bootstrap-server kafka-server:9092
#
#        echo -e 'Creating kafka topics'
#        kafka-topics.sh --create --if-not-exists --topic my-topic --replication-factor 1 --partitions 1 --bootstrap-server kafka-server:9092
#
#        echo -e 'Successfully created the following topics:'
#        kafka-topics.sh --list --bootstrap-server kafka-server:9092
#        "
#      networks:
#        - app-tier

volumes:
  kafka_data:
    driver: local

# Share network
networks:
  app-tier:
    driver: bridge