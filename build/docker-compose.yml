version: "3.9"

services:
#  big-app:
#    container_name: big-app
#    environment:
#      POSTGRES_HOST: "big-db"
#    build:
#      context: ../
#      dockerfile: ./build/app/Dockerfile
#      args:
#        LOCAL: "true"
#    ports:
#      - "8080:8080"
#      - "8090:8090"
#    depends_on:
#      - big-db
#    links:
#      - big-db
#    networks:
#      - big-dev
#    restart: always
#
#  big-db:
#    container_name: big-db
#    environment:
#      POSTGRES_HOST: "big-db"
#    build:
#      context: ../
#      dockerfile: db/postgres/Dockerfile
#      args:
#        LOCAL: "true"
#    restart: always
#    networks:
#      - big-dev
#    hostname: big-db
#    ports:
#      - "5432:5432"
#  shit-house:
#    image: clickhouse/clickhouse-server:latest
#    environment:
#      CLICKHOUSE_USER: shittyshiter
#      CLICKHOUSE_PASSWORD: suckass
#    ports:
#       - "18123:8123"
#       - "19000:9000"
#    volumes:
#      - "../internal/db/clickhouse/clickhouse_init.sql:/docker-entrypoint-initdb.d/clickhouse_init.sql"

#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    environment:
#      - ZOOKEEPER_CLIENT_PORT=2181
#    networks:
#      - kafka-network
#    expose:
#      - "2181"
#    ports:
#      - "2181:2181"
#
#  kafka:
#    image: confluentinc/cp-kafka:latest
#    depends_on:
#      - zookeeper
#    environment:
#      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
#      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
#    networks:
#      - kafka-network
#    ports:
#      - '9092:9092'
#      - '8082:8082'
#      - '8083:8083'

#  zookeeper:
#    hostname: zookeeper
#    image: wurstmeister/zookeeper:3.4.6
#    expose:
#      - "2181"
#    ports:
#      - "2181:2181"

#  kafka:
#    image: wurstmeister/kafka
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: kafka
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_CONNECT_BOOTSTRAP_SERVERS: localhost:9092
#
#      KAFKA_CONNECT_REST_PORTL: 8082
#      KAFKA_CONNECT_REST_ADVERTISED_HOST_NAME: "localhost"
#
#      KAFKA_CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
#      KAFKA_CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
#      KAFKA_CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: 0
#      KAFKA_CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: 0
#
#      KAFKA_CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
#      KAFKA_CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
#      KAFKA_CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE: 0
#      KAFKA_CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE: 0
#
#      KAFKA_CONNECT_OFFSET_STORAGE_FILE_FILENAME: "/tmp/connect.offsets"
#      # Flush much faster than normal, which is useful for testing/debugging
#      KAFKA_CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
#    depends_on:
#      - zookeeper
#    ports:
#      - '9092:9092'
#      - '8082:8082'
#      - '8083:8083'

  kafka:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

volumes:
  kafka_data:
    driver: local

# Share network
networks:
  kafka-network:
    driver: bridge